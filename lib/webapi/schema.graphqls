schema {
    query: Query
    mutation: Mutation
}

"""
Input parameter equivalent to PARAM_ALPHA.
"""
scalar param_alpha

"""
Input parameter equivalent to PARAM_ALPHAEXT.
"""
scalar param_alphaext

"""
Input parameter equivalent to PARAM_ALPHANUM.
"""
scalar param_alphanum

"""
Input parameter equivalent to PARAM_ALPHANUMEXT.
"""
scalar param_alphanumext

"""
Input parameter equivalent to PARAM_AREA, '' is converted to NULL.
"""
scalar param_area

"""
Input parameter equivalent to PARAM_BOOL, '' is converted to NULL.
"""
scalar param_boolean

"""
Input parameter equivalent to PARAM_COMPONENT, '' is converted to NULL.
"""
scalar param_component

"""
Input parameter equivalent to PARAM_INT, '' is converted to NULL.
"""
scalar param_email

"""
Input parameter equivalent to PARAM_INT, '' is converted to NULL.
"""
scalar param_integer

"""
Input parameter equivalent to PARAM_LANG, '' is converted to NULL.
"""
scalar param_lang

"""
Input parameter equivalent to PARAM_PLUGIN, '' is converted to NULL.
"""
scalar param_plugin

"""
Input parameter equivalent to PARAM_SAFEDIR, '' is converted to NULL.
"""
scalar param_safedir

"""
Input parameter equivalent to PARAM_SAFEPATH, '' is converted to NULL.
"""
scalar param_safepath

"""
Input parameter equivalent to PARAM_STRINGID, '' is converted to NULL.
"""
scalar param_stringid

"""
Input parameter equivalent to PARAM_TEXT.
"""
scalar param_text

"""
Input parameter equivalent to PARAM_THEME, '' is converted to NULL.
"""
scalar param_theme

"""
Input parameter equivalent to PARAM_USERNAME, '' is converted to NULL.
"""
scalar param_username

"""
Represents database id fields (numeric string).
"""
scalar core_id

"""
Language string for localisation.
"""
type core_lang_string {
    lang: String!,
    identifier: String!,
    component: String!,
    string: String!,
}

"""
Represents standard unix timestamps stored in database.

For input use either integer, numeric string or ISO-8601 string is allowed.

Output can be usually selected via format argument. See core_date_format
enum for the list of supported formats.
"""
scalar core_date

"""
List of supported output formats for core_date scalar.

The actual format used for userdate() is:
 get_string('strftime' . strtolower($arg['format']), 'langconfig')
"""
enum core_date_format {
    """
    Standard unix timestamp, 0 is replaced with null.
    """
    TIMESTAMP
    """
    ISO-8601 time string in current user timezone, null if no date.
    """
    ISO8601
    DAYDATETIME
    TIME
    TIMESHORT
    TIMELONG
    DATE
    DATESHORT
    DATELONG
    DATETIME
    DATETIMESHORT
    DATETIMELONG
    DATETIMESECONDS
}

"""
Type listing all available queries, plugins need to extend this type to add mroe queries.
"""
type Query {
    core_lang_strings(
        lang: param_lang!,
        """
        ids argument is in the form "$identifier, $component" the same as in {{str}} mustache helper
        """
        ids: [String!]!
    ) : [core_lang_string!]!

    core_template(name: param_alphanumext!, component: param_component!, theme: param_theme!) : String!
}

"""
Type listing all available mutations, plugins need to extend this type to add mroe queries.
"""
type Mutation {
    # TODO until we have some mutations in core we need to add a fake mutation to keep this file valid.
    todo: String
}
