<section id="carousel-{{id}}" class="{{carouseltype}} {{template}} {{cardsize}} alt-interactions">
{{#slides}}
    <article class="learning has-summary">
        {{#thumbnail}} 
            <img src="{{{thumbnail}}}" crossorigin="anonymous" class="hidden" /> 
        {{/thumbnail}}
        
        <figure class="tile" {{#url}} title="{{#str}} gotocourse, block_carousel {{/str}}" {{/url}} data-url="{{url}}">
            <div class="custom-tags">
                {{#user_custom_fields}}
                    <span class="custom-tag">{{.}}</span> 
                {{/user_custom_fields}}
                {{#duration}}<span class="custom-tag {{#latest}}latest{{/latest}}">{{duration}}</span>{{/duration}}
            </div>
            <div class="caption">
                <div class="title-wrap">
                    <div class="icon">
                        <i class="far fa-bullhorn"></i>
                    </div>
                    <h3 class="ellipsis">{{name}}</h3>
                </div>
                <div class="summary">
                    {{summary}}
                </div>
            </div>
        </figure>
        <span class="toggle-card-details" title="{{#str}} showdetail, block_carousel {{/str}}"></span>
    </article>
{{/slides}}
</section>

<section id="carousel-nav-{{id}}" class="nav-slides {{carouseltype}} {{template}} {{cardsize}}">
{{#slides}}
    <article class="learning-details {{carouseltype}}">
        {{#thumbnail}} 
            <img src="{{{thumbnail}}}" crossorigin="anonymous" class="hidden" /> 
        {{/thumbnail}}
        <button type="button" class="close-slide-details"><i class="far fa-times"></i></button>
        <div class="slide-details">
            <h2><i class="far fa-bullhorn"></i> <div class="ellipsis-details">{{name}}</div></h2>
            <div class="custom-tags">{{#duration}}<span class="custom-tag {{#latest}}latest{{/latest}}">{{duration}}</span>{{/duration}}{{#user_custom_fields_details}}<span class="custom-tag">{{.}}</span>{{/user_custom_fields_details}}</div>
            <div class="full-details">
                <div class="full-summary">
                    {{{fullsummary}}}
                </div>
                {{^hide_goto_course_btn}}
                    <a class="btn btn-raised btn-red" href="{{{url}}}">{{#str}} gotocourse, block_carousel {{/str}}</a>
                {{/hide_goto_course_btn}}
            </div>
        </div>
        <div class="social">
        {{^hidesocial}}
            {{#likebuttonid}}
                {{> block_carousel/social_button_like}}
                {{> block_carousel/social_button_follow}}
                {{> block_carousel/social_button_message}}
            {{/likebuttonid}}
        {{/hidesocial}}
        </div>
    </article>
{{/slides}}
</section>

{{#js}}
require(['jquery', 'block_carousel/ellipsis', 'block_carousel/slick', 'block_carousel/colorthief'], function($, ellipsis, slick, colorthief) {
    const mainsettings = {
        asNavFor: '#carousel-nav-{{id}}',
        slidesToShow: {{cardcount}},
        slidesToScroll: 1,
        centerMode: false,
        focusOnSelect: true,
        responsive: [
            {
                breakpoint: 1400,
                settings: {
                    slidesToShow: 3,
                    slidesToScroll: 1,
                }
            },
            {
                breakpoint: 1024,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 1,
                }
            },
            {
                breakpoint: 680,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1
                }
            }
        ]
    };

    const navsettings = {
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: false,
        fade: true,
        draggable: false, 
        accessibility: false,
    };

    let nav = slick.init('#carousel-nav-{{id}}', navsettings);
    let main = slick.init('#carousel-{{id}}', mainsettings);

    nav.hide();

    $('#carousel-{{id}} article.learning figure.tile').click(function(e){
        e.stopPropagation();
        if($(this).data('url')){
            window.location.href = $(this).data('url');
        }
        return false;
    });
    
    $('#carousel-{{id}} article.learning .toggle-card-details').click(function(e){
        nav.show();
        $('#carousel-{{id}}').addClass('showing-details');
        $(window).trigger('resize');   
        // Sometime the nav slides resize fails
        // This is a fallback check
        let track_width = $('#carousel-nav-{{id}} .slick-track').css('width');
        if(track_width == '0px') {
            $('#carousel-nav-{{id}} .slick-track').css('width', '100%');
            $('#carousel-nav-{{id}} .slick-track .slick-slide.slick-active').css('width', '100%');
        }
        
        ellipsis.init('#carousel-nav-{{id}} article .ellipsis-details');
        setTimeout(function() {
            ellipsis.init('#carousel-nav-{{id}} article .ellipsis-details');
        },1000);
    });
    
    $('#carousel-nav-{{id}} .close-slide-details' ).click(function(e){
        nav.hide("fast");
        $('#carousel-{{id}}').removeClass('showing-details');
        $(window).trigger('resize');
    });

    $("#carousel-{{id}} article").each(function( index ) {
        const imageUrl = $( this ).find( "img.hidden:first" ).attr('src');
        const image = new Image();

        image.onload = function(){
            const colorThief = colorthief.init();
            const primaryColour = colorThief.getColor(image);
            var r = primaryColor[0],
            g = primaryColor[1],
            b = primaryColor[2];
            // Take the RGB and convert that into the perceived brightness of the primary colour on a 0 - 1 scale.
            // More info: https://stackoverflow.com/q/596216
            const luminance = Math.sqrt((0.299 * r * r) + (0.587 * g * g) + (0.114 * b * b)) / 255;
            $(this).addClass(luminance > 0.6 ? 'dark-text' : 'light-text');
            const firstColour = colorthief.rgbCode(primaryColor, 0);
            const secondColour = colorthief.rgbCode(primaryColor, 1);

            $(this).css('background-image', 'linear-gradient(to right,'+ firstColour +' 0%, '+ secondColour +' 60%), url('+imageUrl+')');
            $(this).css('background-position', 'left');
            $(this).find('.custom-tag.latest').css('color', secondColour);
        }.bind(this);
        image.src = imageUrl;
    });
    
    $("#carousel-nav-{{id}} article").each(function( index ) {
        const imageUrl = $( this ).find( "img.hidden:first" ).attr('src');
        const image = new Image();

        image.onload = function () {
            const colorThief = colorthief.init();
            const primaryColor = colorThief.getColor(image);
            var r = primaryColor[0],
            g = primaryColor[1],
            b = primaryColor[2];
            // Take the RGB and convert that into the perceived brightness of the primary colour on a 0 - 1 scale.
            // More info: https://stackoverflow.com/q/596216
            const luminance = Math.sqrt((0.299 * r * r) + (0.587 * g * g) + (0.114 * b * b)) / 255;
            $(this).addClass(luminance > 0.6 ? 'dark-text' : 'light-text');
            const dominantColor = colorthief.rgbCode(primaryColor, 1);
            $(this).css('background-image', 'linear-gradient(to right,' + dominantColor + ' 0% 71%, transparent 100%), url(' + imageUrl + ')');
            $(this).find('.social .btn').css('color', dominantColor);
            $(this).find('.custom-tag.latest').css('color', dominantColor);
        }.bind(this);
        image.src = imageUrl;
    });

    ellipsis.init('#carousel-{{id}} article .ellipsis');
});
{{/js}}
