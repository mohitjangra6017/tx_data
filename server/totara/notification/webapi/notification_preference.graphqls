type totara_notification_notification_preference {
  """
  Id cannot be null here, because Apollo is specifically using this field along side
  with the field __typename to cache the record.
  The field 'id' here will prefer to the table's id. If you want to know whether the record
  is existing at the specific context that is provided, then please use the field 'context_identifier'
  """
  id: Int!
  title: String!
  subject: String!
  body: String!
  body_format: Int!
  """
  Whether the field 'body' is overridden
  """
  overridden_body: Boolean!
  """
  Whether the field 'subject' is overridden
  """
  overridden_subject: Boolean!
  """
  Human readable event's name.
  """
  event_name: String!
  """
  The class name of notifiable event which this notification is created for.
  """
  event_class_name: String!
  """
  The ancestor of this very notification's preference.
  If the value of this field is null, meaning that the notification is sitting
  at the top level of the system.
  """
  ancestor_id: Int
  """
  The comment that this notification is sitting in. Mainly it will be
  computed from the notifiable event that the notification is for.
  """
  component: String!
  """
  Whether this notification preference is a custom notification or not.
  """
  is_custom: Boolean!
  """
  Whether this notification preference has a parent or not.
  NULL if this notification preference does not have a parent within
  the system. Otherwise its own parent's id, or its ancestor's id.
  """
  parent_id: Int

  """
  The context ID of the notification.
  """
  context_id: Int!
}

"""
A type to hold the result of data validation.
"""
type totara_notification_notification_preference_validation_result {
  field_name: String!
  error_message: String!
}

extend type Mutation {
  totara_notification_create_notification_preference(
    """
    The event's name that this notification preference is
    set for MUST be provided.
    """
    event_class_name: param_text!
    "Context's id MUST be provided"
    context_id: param_integer!
    """
    If ancestor_id is provided, then we would know that this notification preference
    is overriding one of the notification preference at under context.
    """
    ancestor_id: param_integer
    title: param_text
    body: param_text
    body_format: param_integer
    subject: param_text
  ): totara_notification_notification_preference!

  """
  Mutation to update the notification preference, by the 'id' field.
  """
  totara_notification_update_notification_preference(
    id: param_integer!
    """
    Note that these fields bellow are able to set to null.
    Only if this very notification preference can fallback to the parent, or
    the system built in notification that has default values.
    """
    body: param_text
    body_format: param_integer
    title: param_text
    subject: param_text
  ): totara_notification_notification_preference!

  """
  This mutation is about validating the input data from
  the client side when user is trying to create a new custom notification.
  Even though it is under mutation, but it will not cause any state change in the system.
  """
  totara_notification_validate_notification_preference_input(
    """
    We use String because we want to validate all sort of data, before any
    param_{what_ever} stripped out the value.

    This apply for the other fields of this mutation.
    """
    title: String!
    body: String!
    subject: String!
  ): [totara_notification_notification_preference_validation_result]!
}

extend type Query {
  """
  A query to get the notification preference by id
  """
  totara_notification_notification_preference(
    id: param_integer!
  ): totara_notification_notification_preference!

  """
  A query to fetch all the notification preferences under specific context which
  can be listening to the notifiable event (if provided).
  """
  totara_notification_notification_preferences(
    """
    If the context's id does not provided, then it will beusing the system context.
    """
    context_id: param_integer
    """
    If this parameter is provided, we are fetching only the notification preferences that are listening to
    this event only.
    """
    event_class_name: param_text
    """
    Whether we want the list of notification preferences at the specific context only,
    or the list that is a mix of overridden and non-overridden (higher context).
    """
    at_context_only: param_boolean!
  ): [totara_notification_notification_preference!]!
}
