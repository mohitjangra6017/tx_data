type mod_perform_track_assignment {
  track_id: core_id!
  type: Int!
  group: mod_perform_user_grouping!
}

type mod_perform_dynamic_date_source {
  resolver_class_name: String!
  option_key: String
  display_name: String!
  is_available: Boolean!
}

"""
A list of possible units which can be used for relative dynamic date schedules
"""
enum mod_perform_track_dynamic_unit_enums {
  DAY
  WEEK
}

"""
A list of possible directions which can be used for relative dynamic date schedules
"""
enum mod_perform_track_dynamic_direction_enums {
  AFTER
  BEFORE
}

"""
A list of possible job behaviours for subject instance generation which a track can be set to
"""
enum mod_perform_track_subject_instance_generation_enums {
  ONE_PER_SUBJECT
  ONE_PER_JOB
}

"""
A list of possible repeating types which can be used for repeating schedules
"""
enum mod_perform_track_repeating_type_enums {
  AFTER_CREATION
  AFTER_CREATION_WHEN_COMPLETE
  AFTER_COMPLETION
}

type mod_perform_track {
  id: core_id!
  description(format: core_format = HTML): String!
  status: Int!
  subject_instance_generation_control_is_enabled: Boolean!
  subject_instance_generation: mod_perform_track_subject_instance_generation_enums
  schedule_is_open: Boolean!
  schedule_is_fixed: Boolean!
  schedule_fixed_from: Int
  schedule_fixed_to: Int
  schedule_dynamic_count_from: Int
  schedule_dynamic_count_to: Int
  schedule_dynamic_unit: mod_perform_track_dynamic_unit_enums
  schedule_dynamic_direction: mod_perform_track_dynamic_direction_enums
  schedule_dynamic_source: mod_perform_dynamic_date_source
  due_date_is_enabled: Boolean!
  due_date_is_fixed: Boolean
  due_date_fixed: Int
  due_date_relative_count: Int
  due_date_relative_unit: mod_perform_track_dynamic_unit_enums
  repeating_is_enabled: Boolean!
  repeating_relative_type: mod_perform_track_repeating_type_enums
  repeating_relative_count: Int
  repeating_relative_unit: mod_perform_track_dynamic_unit_enums
  repeating_is_limited: Boolean
  repeating_limit: Int
  assignments: [mod_perform_track_assignment!]!
}

extend type Query {
  mod_perform_tracks(activity_id: param_integer!): [mod_perform_track!]!

  mod_perform_track(track_id: param_integer!): mod_perform_track!

  """
  TODO temporary query. To be removed and replaced by mod_perform_track when
  multiple tracks per activity gets implemented in the front end.
  """
  mod_perform_default_track(activity_id: param_integer!): mod_perform_track!

  """
  Get all available options for dynamic schedule date resolver options.
  """
  mod_perform_available_dynamic_date_sources: [mod_perform_dynamic_date_source!]!
}

input mod_perform_track_assignments_input {
  track_id: core_id!
  type: Int!
  groups: [mod_perform_user_grouping_input!]!
}

input mod_perform_create_track_input {
  activity_id: param_integer!
  description: param_text
}

input mod_perform_dynamic_date_source_input {
  resolver_class_name: param_text!
  option_key: param_text
}

"""
Input parameters required for open-ended track schedule period using fixed dates
"""
input mod_perform_track_schedule_input {
  track_id: core_id!
  subject_instance_generation: mod_perform_track_subject_instance_generation_enums
  schedule_is_open: param_boolean!
  schedule_is_fixed: param_boolean!
  schedule_fixed_from: param_integer
  schedule_fixed_to: param_integer
  schedule_dynamic_count_from: param_integer
  schedule_dynamic_count_to: param_integer
  schedule_dynamic_unit: mod_perform_track_dynamic_unit_enums
  schedule_dynamic_direction: mod_perform_track_dynamic_direction_enums
  schedule_dynamic_source: mod_perform_dynamic_date_source_input
  due_date_is_enabled: param_boolean!
  due_date_is_fixed: param_boolean
  due_date_fixed: param_integer
  due_date_relative_count: param_integer
  due_date_relative_unit: mod_perform_track_dynamic_unit_enums
  repeating_is_enabled: param_boolean!
  repeating_relative_type: mod_perform_track_repeating_type_enums
  repeating_relative_count: param_integer
  repeating_relative_unit: mod_perform_track_dynamic_unit_enums
  repeating_is_limited: param_boolean
  repeating_limit: param_integer
}

"""
Return type for mod_perform_update_track_schedule
"""
type mod_perform_update_track_schedule_result {
  track: mod_perform_track!
}

extend type Mutation {
  """
  Add a new track to a given activity
  """
  mod_perform_create_track(
    details: mod_perform_create_track_input!
  ): mod_perform_track!

  """
  Add track assignments to a given track
  """
  mod_perform_add_track_assignments(
    assignments: mod_perform_track_assignments_input!
  ): mod_perform_track!

  """
  Remove track assignments
  """
  mod_perform_remove_track_assignments(
    assignments: mod_perform_track_assignments_input!
  ): mod_perform_track!

  """
  Set the assignment schedule for a track
  """
  mod_perform_update_track_schedule(
    track_schedule: mod_perform_track_schedule_input!
  ): mod_perform_update_track_schedule_result!
}
